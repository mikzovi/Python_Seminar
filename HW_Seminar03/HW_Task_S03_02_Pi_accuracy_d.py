# 2. Вычислить число Пи c заданной точностью d
# Пример: при d = 0.001,  c= 3.141.

from decimal import ROUND_DOWN


def pi_calculate(current_d):
    k = 1
    current_pi = 0
    element = 1  
    while abs(element) >= current_d:
        element = ((-1)**(k+1))/(2*k - 1)
        k = k+1
        current_pi += element
    current_pi *= 4
    return(current_pi)

# Вычислить Пи с заданной точностью? или вывести Пи с заданным количеством знаков после запятой?
# Вычисление Пи с точностью 0.001 дает результат 3.144 после округления 3.1435886596, а никак не 3.141. 
# 3.141 это тупой вывод числа Пи (3,14159265358979323846....) с тремя знаками после запятой.

d = 0.001
p = 3
print(f'Число Пи с точностью {d} : {round(pi_calculate(d), p)}')
